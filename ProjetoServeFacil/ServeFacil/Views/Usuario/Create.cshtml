@model ServeFacil.ViewModels.UsuarioViewModel

@{
    ViewBag.Title = "Create";
}

<script language="javascript" src="../Script/bootstrap.js"></script>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="cadastrar-usuario" >
        <h4>CADASTRO DE USUÁRIOS</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="Nome" id="idNome" pattern=".{3,}" maxlength="90" required title="Campo obrigatório!" />
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SobreNome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="SobreNome" id="idSobreNome" pattern=".{3,}" maxlength="90" required title="Campo obrigatório!" />
                @Html.ValidationMessageFor(model => model.SobreNome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="password" id="senha"  name="senha" required title="Campo Obrigatório!" />
                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmarSenha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="password" name="confirmarSenha" id="confirmarSenha" required title="Deve estar compatível com a senha." />
                @Html.ValidationMessageFor(model => model.ConfirmarSenha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="email" name="email" id="email" required title="Digite seu email" />
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="cpf" id="idCpf" onblur="" onkeypress="mascara(this, '###.###.###-##'), SomenteNumero();" maxlength="14" required title="Campo obrigatório!" />
                @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="CEP" id="cep" onblur="consultacep(this.value)" onkeypress="mascara(this, '##.###-###');"  maxlength="10" required title="Campo obrigatório!" />
                @Html.ValidationMessageFor(model => model.cep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endereco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="Endereco" id="logradouro" onblur="consultacep(this.value)" maxlength="9" required title="Campo obrigatório!" />
                @Html.ValidationMessageFor(model => model.endereco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="estado" id="idEstado"  />
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="cidade" id="idCidade" />
                @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="Numero" id="idNumero" maxlength="6" onkeypress="return SomenteNumero(event);" required title="Campo obrigatório!" />
                @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
            </div>
        </div>


       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cadastrar" onclick="validarSenha();" class="btn" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
